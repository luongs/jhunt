Ch3 Functions:
    Scope
    * Lexical scoping: Makes all variables around a function visible 
    * Functions are the only things creating a new scope
    * Blocks do not create new scope
    
    Functions as values
    * Fnc can be passed as params, be assigned new functionality, etc

    Declaration notation
    * Fnc can be declared after their first uses

    Optional arguments
    * JS ignores any extra args passed
    * Returns undefined if too few passed
    
    Closure
    * The ability to reference a spefic instance of local variables 
      in an enclosing function
    * Think of the function keyword as 'freezing' the code in the body and
      wrapping it in a package. Returning function will return a piece of 
      pkg

    Functions and side effects
    * Function with side effects do not return anything, they might be used
      to print output to the console
    * pure function => no side effects and doesn't rely on side effects from
      from other code (eg: doesn't read global vars changed in other fncs)
    * pure functions will always return the same value regardless of how 
      they're called! Since they don't rely on anything else from the program.
      Hence they're easier to debug
